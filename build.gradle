plugins {
    id 'java'
    id 'findbugs'
    id 'pmd'
    id 'jacoco'
    id 'build-announcements'
    id 'nebula.optional-base' version '3.0.3'
    id 'nebula.provided-base' version '3.0.3'
    id 'nebula.info' version '3.0.3'
    id 'nebula.nebula-javadoc-jar' version '2.2.2'
    id 'nebula.nebula-source-jar' version '2.2.2'
    // id 'nebula-publishing-plugin' version '4.4.4'
    id 'com.github.ben-manes.versions' version '0.12.0'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.6'
}

description = 'This project aims to provide the facility to easily implement JSON-RPC for the java programming language.'
version = '1.3.0'
group = 'com.github.briandilley.jsonrpc4j'

sourceCompatibility = 1.7
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    ext {
        jacksonVersion = '2.7.2'
        springVersion = '4.2.5.RELEASE'
        springBotVersion = '1.3.3.RELEASE'
        jettyVersion = '9.3.8.RC0'
    }

    compile 'net.iharder:base64:2.3.9'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    provided 'javax.portlet:portlet-api:2.0'
    provided 'javax.servlet:javax.servlet-api:3.1.0'


    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"

    compile "org.springframework:spring-core:${springVersion}", optional
    compile "org.springframework:spring-context:${springVersion}", optional
    compile "org.springframework:spring-web:${springVersion}", optional
    compile "org.springframework:spring-webmvc:${springVersion}", optional


    compile 'commons-codec:commons-codec:1.10', optional
    compile 'org.apache.httpcomponents:httpcore-nio:4.4.4', optional

    testCompile 'junit:junit:4.12'
    testCompile 'org.easymock:easymock:3.4'
    testCompile "org.springframework.boot:spring-boot-starter-web:${springBotVersion}"
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBotVersion}")
    testCompile("org.eclipse.jetty:jetty-server:${jettyVersion}") {
        exclude module: 'javax.servlet'
    }
    testCompile("org.eclipse.jetty:jetty-servlet:${jettyVersion}") {
        exclude module: 'org.eclipse.jetty.orbit'
    }
}

jacoco {
    toolVersion = '0.7.6.201602180812'
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}


publishing {
    publications {
        jar(MavenPublication) {
            from components.java
        }
        javadoc(MavenPublication) { // if maven-publish is applied
            artifact tasks.javadocJar
        }
        source(MavenPublication) {
            artifact tasks.sourceJar
        }
    }
}

bintray {
    user = project.hasProperty('user') ? project.property('user') : 'not_set'
    key = project.hasProperty('key') ? project.property('key') : 'not_set'
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'com.github.briandilley.jsonrpc4j:jsonrpc4j'
        desc = project.description
        licenses = ['MIT']
        publications = ['jar', 'javadoc', 'source']
        websiteUrl = 'https://briandilley.github.io/jsonrpc4j'
        issueTrackerUrl = 'https://github.com/briandilley/jsonrpc4j/issues'
        vcsUrl = 'git@github.com:briandilley/jsonrpc4j.git'
        labels = ['json', 'rpc', 'java']
        publicDownloadNumbers = true
        githubRepo = 'briandilley/jsonrpc4j'
        githubReleaseNotesFile = 'README.md'
        version {
            gpg {
                sign = true
            }
            name = project.version
            vcsTag = project.version
            released = new Date()
        }
    }
}
